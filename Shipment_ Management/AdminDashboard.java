/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kujo7
 */
public class AdminDashboard extends javax.swing.JFrame {

    /**
     * Creates new form AdminDashboard
     */
    public AdminDashboard() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        lblScheds = new raven.tabbed.TabbedPaneCustom();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblusers = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        btnUserDelete = new javax.swing.JButton();
        btnExit1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAdminShip = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        btndelete = new javax.swing.JButton();
        cmbStatus1 = new javax.swing.JComboBox<>();
        btnupdate1 = new javax.swing.JButton();
        btnCargo1 = new javax.swing.JButton();
        btnCargo2 = new javax.swing.JButton();
        btnCargo3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSched = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        btnupdate = new javax.swing.JButton();
        cmbavailable = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblScheds.setBackground(new java.awt.Color(204, 204, 204));
        lblScheds.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblScheds.setSelectedColor(new java.awt.Color(102, 102, 255));
        lblScheds.setUnselectedColor(new java.awt.Color(204, 204, 255));

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));

        tblusers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblusers);

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnUserDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUserDelete.setText("Delete");
        btnUserDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserDeleteActionPerformed(evt);
            }
        });

        btnExit1.setBackground(new java.awt.Color(255, 102, 102));
        btnExit1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExit1.setText("Exit");
        btnExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUserDelete)
                    .addComponent(btnExit1))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnUserDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExit1)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        lblScheds.addTab("Manage Users", jPanel1);

        jPanel2.setBackground(new java.awt.Color(153, 255, 153));

        tblAdminShip.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Phone No", "From", "To", "Vehicle Type", "Date", "Status", "Cargo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAdminShip.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAdminShipMouseClicked(evt);
            }
        });
        tblAdminShip.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tblAdminShipComponentShown(evt);
            }
        });
        jScrollPane2.setViewportView(tblAdminShip);

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btndelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        jPanel4.add(btndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        cmbStatus1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cmbStatus1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Preparing Shipment", "Left the Department", "On the way", "Arrived at the port", "Ready for pickup", "Done" }));
        cmbStatus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStatus1ActionPerformed(evt);
            }
        });
        jPanel4.add(cmbStatus1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        btnupdate1.setBackground(new java.awt.Color(0, 204, 204));
        btnupdate1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnupdate1.setText("Update");
        btnupdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdate1ActionPerformed(evt);
            }
        });
        jPanel4.add(btnupdate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        btnCargo1.setBackground(new java.awt.Color(51, 51, 51));
        btnCargo1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCargo1.setForeground(new java.awt.Color(255, 255, 255));
        btnCargo1.setText("Cargo 1");
        btnCargo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargo1ActionPerformed(evt);
            }
        });
        jPanel4.add(btnCargo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        btnCargo2.setBackground(new java.awt.Color(51, 51, 51));
        btnCargo2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCargo2.setForeground(new java.awt.Color(255, 255, 255));
        btnCargo2.setText("Cargo 2");
        btnCargo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargo2ActionPerformed(evt);
            }
        });
        jPanel4.add(btnCargo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        btnCargo3.setBackground(new java.awt.Color(51, 51, 51));
        btnCargo3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCargo3.setForeground(new java.awt.Color(255, 255, 255));
        btnCargo3.setText("Cargo 3");
        btnCargo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargo3ActionPerformed(evt);
            }
        });
        jPanel4.add(btnCargo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );

        lblScheds.addTab("Manage Shipments", jPanel2);

        jPanel3.setBackground(new java.awt.Color(153, 255, 153));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblSched.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Location", "Schedules", "Travel Time", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblSched);

        jPanel3.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 820, 407));

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnupdate.setBackground(new java.awt.Color(0, 204, 204));
        btnupdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        jPanel5.add(btnupdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        cmbavailable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cmbavailable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Not Available" }));
        cmbavailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbavailableActionPerformed(evt);
            }
        });
        jPanel5.add(cmbavailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Available Cargos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jPanel3.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 10, 150, 410));

        lblScheds.addTab("Schedules", jPanel3);

        getContentPane().add(lblScheds, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 470));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbStatus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStatus1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbStatus1ActionPerformed

    private void cmbavailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbavailableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbavailableActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // Get the selected row index in the JTable
        DefaultTableModel model3 = (DefaultTableModel) tblSched.getModel();
        int selectedRow = tblSched.getSelectedRow();

        // If no row is selected, show a message and return
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a row to update.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Get the values from the selected row
        String location = model3.getValueAt(selectedRow, 0).toString();
        String newStatus = cmbavailable.getSelectedItem().toString();

        // SQL query to update the row in the database
        String sql = "UPDATE schedules SET Status_ship = ? WHERE location_from = ?";

        try (Connection con = MyConnection.getConnection();
             PreparedStatement stmt = con.prepareStatement(sql)) {
            stmt.setString(1, newStatus);
            stmt.setString(2, location);

            // Execute the update
            int rowsAffected = stmt.executeUpdate();

            if (rowsAffected > 0) {
                // Update the table model
                model3.setValueAt(newStatus, selectedRow, 3);
                JOptionPane.showMessageDialog(null, "Row updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Error updating the row in the database.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btnupdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdate1ActionPerformed
        // Get the selected row index in the JTable
        DefaultTableModel model2 = (DefaultTableModel) tblAdminShip.getModel();
        int selectedRow = tblAdminShip.getSelectedRow();

        // If no row is selected, show a message and return
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a row to update.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Get the values from the selected row
        String userName = model2.getValueAt(selectedRow, 0).toString();
        String phoneNumber = model2.getValueAt(selectedRow, 1).toString();
        String newStatus = cmbStatus1.getSelectedItem().toString();

        // SQL query to update the row in the database
        String sql = "UPDATE shipmentsubmission SET status_ship = ? WHERE user_name = ? AND phone_number = ?";

        try (Connection con = MyConnection.getConnection();
             PreparedStatement stmt = con.prepareStatement(sql)) {
            stmt.setString(1, newStatus);
            stmt.setString(2, userName);
            stmt.setString(3, phoneNumber);

            // Execute the update
            int rowsAffected = stmt.executeUpdate();

            if (rowsAffected > 0) {
                // Update the table model
                model2.setValueAt(newStatus, selectedRow, 6);
                JOptionPane.showMessageDialog(null, "Row updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Error updating the row in the database.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnupdate1ActionPerformed

    private void tblAvailCargoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAvailCargoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblAvailCargoMouseClicked

    private void tblAvailCargoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tblAvailCargoComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_tblAvailCargoComponentShown

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new ViewCargo().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnCargo3ActionPerformed(java.awt.event.ActionEvent evt) {
        assignToCargo("Cargo 3");
    }

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        new AdLogReen().setVisible(true);
        setVisible(false);
    }// GEN-LAST:event_btnExitActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {// GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblusers.getModel();
        DefaultTableModel model2 = (DefaultTableModel) tblAdminShip.getModel();
        DefaultTableModel model3 = (DefaultTableModel) tblSched.getModel();

        try {
            Connection con = MyConnection.getConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select *from login");
            while (rs.next()) {
                model.addRow(new Object[] { rs.getString("username"), rs.getString("password") });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        try {
            Connection con = MyConnection.getConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select *from ShipmentSubmission");
            while (rs.next()) {
                model2.addRow(new Object[] { 
                    rs.getString("user_name"), 
                    rs.getString("phone_number"),
                    rs.getString("shipment_from"), 
                    rs.getString("shipment_to"), 
                    rs.getString("vehicle_type"),
                    rs.getString("submission_date"),
                    rs.getString("status_ship"),
                    rs.getString("cargo")
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        try {
            Connection con = MyConnection.getConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select *from schedules");
            while (rs.next()) {
                model3.addRow(new Object[] { rs.getString("Location_from"), rs.getString("Location_to"),
                        rs.getString("Time_ship"), rs.getString("Status_ship")});
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        

    }// GEN-LAST:event_formComponentShown

    private void btnExit1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnExit1ActionPerformed
        // TODO add your handling code here:
        new AdLogReen().setVisible(true);
        setVisible(false);
    }// GEN-LAST:event_btnExit1ActionPerformed

    private void tblAdminShipMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tblAdminShipMouseClicked
        // TODO add your handling code here:
    }// GEN-LAST:event_tblAdminShipMouseClicked

    private void tblAdminShipComponentShown(java.awt.event.ComponentEvent evt) {// GEN-FIRST:event_tblAdminShipComponentShown
        // TODO add your handling code here:
    }// GEN-LAST:event_tblAdminShipComponentShown

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btndeleteActionPerformed
        // Get the database connection
        try (Connection con = MyConnection.getConnection()) {

            // Get the selected row index in the JTable
            DefaultTableModel model2 = (DefaultTableModel) tblAdminShip.getModel();
            int selectedRow = tblAdminShip.getSelectedRow();

            // If no row is selected, show a message and return
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(null, "Please select a row to delete.", "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Get the values from the selected row (assuming the user_name and phone_number are in columns 0 and 1)
            String userName = model2.getValueAt(selectedRow, 0).toString();
            String phoneNumber = model2.getValueAt(selectedRow, 1).toString();

            // SQL query to delete the row from the database based on user_name and phone_number
            String sql = "DELETE FROM shipmentsubmission WHERE user_name = ? AND phone_number = ?";

            // Prepare the SQL statement
            try (PreparedStatement stmt = con.prepareStatement(sql)) {
                stmt.setString(1, userName); // Set user_name value
                stmt.setString(2, phoneNumber); // Set phone_number value

                // Execute the deletion
                int rowsAffected = stmt.executeUpdate();

                // If rows are affected, proceed to remove the row from the table
                if (rowsAffected > 0) {
                    // Remove the selected row from the table model
                    model2.removeRow(selectedRow);
                    // Show success message
                    JOptionPane.showMessageDialog(null, "Row deleted successfully", "Success",
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
                    // If no rows were deleted from the database
                    JOptionPane.showMessageDialog(null, "Error deleting the row from the database.", "Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Database connection error: " + e.getMessage(), "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_btndeleteActionPerformed

    private void btnUserDeleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnUserDeleteActionPerformed
        // TODO add your handling code here:
        try (Connection con = MyConnection.getConnection()) {

            // Get the selected row index in the JTable
            DefaultTableModel model = (DefaultTableModel) tblusers.getModel();
            int selectedRow = tblusers.getSelectedRow();

            // If no row is selected, show a message and return
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(null, "Please select a row to delete.", "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Get the values from the selected row (assuming the client_name and file_link
            // are in columns 0 and 1)
            String userName = model.getValueAt(selectedRow, 0).toString();
            String password = model.getValueAt(selectedRow, 1).toString();

            // SQL query to delete the row from the database based on client_name and
            // file_link
            String sql = "DELETE FROM login WHERE username = ? AND password = ?";

            // Prepare the SQL statement
            try (PreparedStatement stmt = con.prepareStatement(sql)) {
                stmt.setString(1, userName); // Set client_name value
                stmt.setString(2, password); // Set file_link value

                // Execute the update (deletion)
                int rowsAffected = stmt.executeUpdate();

                // If rows are affected, proceed to remove the row from the table
                if (rowsAffected > 0) {
                    // Remove the selected row from the table model
                    model.removeRow(selectedRow);

                    // Show success message
                    JOptionPane.showMessageDialog(null, "Row deleted successfully!", "Success",
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
                    // If no rows were deleted from the database
                    JOptionPane.showMessageDialog(null, "Error deleting the row from the database.", "Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Database connection error: " + e.getMessage(), "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_btnUserDeleteActionPerformed

    private boolean isDuplicateEntry(String userName, String phoneNumber, String cargoTable) {
        String sql = "SELECT COUNT(*) as count FROM " + cargoTable + 
                    " WHERE user_name = ? AND phone_number = ?";
        
        try (Connection con = MyConnection.getConnection();
             PreparedStatement stmt = con.prepareStatement(sql)) {
            
            stmt.setString(1, userName);
            stmt.setString(2, phoneNumber);
            
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                return rs.getInt("count") > 0;
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, 
                "Error checking for duplicates: " + e.getMessage(), 
                "Error", JOptionPane.ERROR_MESSAGE);
        }
        return false;
    }

    private void assignToCargo(String cargoType) {
        // Get the selected row index in the JTable
        DefaultTableModel model2 = (DefaultTableModel) tblAdminShip.getModel();
        int selectedRow = tblAdminShip.getSelectedRow();

        // If no row is selected, show a message and return
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a shipment to assign to " + cargoType, 
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Get the values from the selected row
        String userName = model2.getValueAt(selectedRow, 0).toString();
        String phoneNumber = model2.getValueAt(selectedRow, 1).toString();
        String vehicleType = model2.getValueAt(selectedRow, 4).toString();

        // Check for duplicate entries
        String cargoTableName = cargoType.toLowerCase().replace(" ", "_");
        if (isDuplicateEntry(userName, phoneNumber, cargoTableName)) {
            JOptionPane.showMessageDialog(null, 
                "This shipment is already assigned to " + cargoType + "!", 
                "Duplicate Entry", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // SQL query to update the cargo assignment in the shipmentsubmission table
        String updateShipmentSql = "UPDATE shipmentsubmission SET cargo = ? WHERE user_name = ? AND phone_number = ?";

        // SQL query to insert into the cargo-specific table
        String insertCargoSql = "INSERT INTO " + cargoTableName + 
                               " (user_name, phone_number, vehicle_type) VALUES (?, ?, ?)";

        try (Connection con = MyConnection.getConnection()) {
            // Update the shipmentsubmission table
            try (PreparedStatement stmt = con.prepareStatement(updateShipmentSql)) {
                stmt.setString(1, cargoType);
                stmt.setString(2, userName);
                stmt.setString(3, phoneNumber);
                stmt.executeUpdate();
            }

            // Insert into the cargo-specific table
            try (PreparedStatement cargoStmt = con.prepareStatement(insertCargoSql)) {
                cargoStmt.setString(1, userName);
                cargoStmt.setString(2, phoneNumber);
                cargoStmt.setString(3, vehicleType);
                cargoStmt.executeUpdate();
            }

            // Update the table model
            model2.setValueAt(cargoType, selectedRow, 7); // Assuming cargo is in column 7
            JOptionPane.showMessageDialog(null, 
                "Shipment successfully assigned to " + cargoType, 
                "Success", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, 
                "Error: " + e.getMessage(), 
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void btnCargo1ActionPerformed(java.awt.event.ActionEvent evt) {
        assignToCargo("Cargo 1");
    }

    private void btnCargo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargo2ActionPerformed
        assignToCargo("Cargo 2");
    }//GEN-LAST:event_btnCargo2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargo1;
    private javax.swing.JButton btnCargo2;
    private javax.swing.JButton btnCargo3;
    private javax.swing.JButton btnExit1;
    private javax.swing.JButton btnUserDelete;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnupdate;
    private javax.swing.JButton btnupdate1;
    private javax.swing.JComboBox<String> cmbStatus1;
    private javax.swing.JComboBox<String> cmbavailable;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private raven.tabbed.TabbedPaneCustom lblScheds;
    private javax.swing.JTable tblAdminShip;
    private javax.swing.JTable tblSched;
    private javax.swing.JTable tblusers;
    // End of variables declaration//GEN-END:variables
}
