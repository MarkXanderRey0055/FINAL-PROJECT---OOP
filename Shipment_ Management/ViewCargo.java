/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kujo7
 */
public class ViewCargo extends javax.swing.JFrame {

    /**
     * Creates new form ViewCargo
     */
    public ViewCargo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPaneCustom1 = new raven.tabbed.TabbedPaneCustom();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCargo1 = new javax.swing.JTable();
        btnCargoDel1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCargo2 = new javax.swing.JTable();
        btnCargoDel2 = new javax.swing.JButton();
        btnBack1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCargo3 = new javax.swing.JTable();
        btnCargoDel3 = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        tabbedPaneCustom1.setBackground(new java.awt.Color(204, 204, 255));
        tabbedPaneCustom1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tabbedPaneCustom1.setSelectedColor(new java.awt.Color(153, 153, 255));
        tabbedPaneCustom1.setUnselectedColor(new java.awt.Color(204, 204, 255));

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblCargo1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Username", "Phone Number", "Vehicle Type"
            }
        ));
        tblCargo1.setSelectionBackground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(tblCargo1);

        btnCargoDel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCargoDel1.setText("Delete");
        btnCargoDel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargoDel1ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 662, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnCargoDel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jButton1)))
                .addGap(70, 70, 70))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCargoDel1)
                        .addGap(342, 342, 342)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        tabbedPaneCustom1.addTab("Cargo 1", jPanel1);

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblCargo2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Username", "Phone Number", "Vehicle Type"
            }
        ));
        tblCargo2.setSelectionBackground(new java.awt.Color(0, 51, 51));
        jScrollPane2.setViewportView(tblCargo2);

        btnCargoDel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCargoDel2.setText("Delete");
        btnCargoDel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargoDel2ActionPerformed(evt);
            }
        });

        btnBack1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack1.setText("Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCargoDel2)
                    .addComponent(btnBack1))
                .addGap(66, 66, 66))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(40, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnCargoDel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack1)
                        .addGap(48, 48, 48))))
        );

        tabbedPaneCustom1.addTab("Cargo 2", jPanel2);

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblCargo3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Username", "Phone Number", "Vehicle Type"
            }
        ));
        tblCargo3.setSelectionBackground(new java.awt.Color(0, 0, 0));
        jScrollPane3.setViewportView(tblCargo3);

        btnCargoDel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCargoDel3.setText("Delete");
        btnCargoDel3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargoDel3ActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCargoDel3)
                    .addComponent(btnBack))
                .addGap(82, 82, 82))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnCargoDel3)
                        .addGap(343, 343, 343)
                        .addComponent(btnBack))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        tabbedPaneCustom1.addTab("Cargo 3", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPaneCustom1, javax.swing.GroupLayout.PREFERRED_SIZE, 867, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPaneCustom1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblCargo1.getModel();
        DefaultTableModel model2 = (DefaultTableModel) tblCargo2.getModel();
        DefaultTableModel model3 = (DefaultTableModel) tblCargo3.getModel();
        
        // Clear existing rows
        model.setRowCount(0);
        model2.setRowCount(0);
        model3.setRowCount(0);

        try {
            Connection con = MyConnection.getConnection();
            Statement st = con.createStatement();
            // Modified query to limit to 10 rows
            ResultSet rs = st.executeQuery("select * from cargo_1 LIMIT 10");
            while (rs.next()) {
                model.addRow(new Object[] { 
                    rs.getString("user_name"), 
                    rs.getString("phone_number"),
                    rs.getString("vehicle_type")
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }

        try {
            Connection con = MyConnection.getConnection();
            Statement st = con.createStatement();
            // Modified query to limit to 10 rows
            ResultSet rs = st.executeQuery("select * from cargo_2 LIMIT 10");
            while (rs.next()) {
                model2.addRow(new Object[] { 
                    rs.getString("user_name"), 
                    rs.getString("phone_number"),
                    rs.getString("vehicle_type") 
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        try {
            Connection con = MyConnection.getConnection();
            Statement st = con.createStatement();
            // Modified query to limit to 10 rows
            ResultSet rs = st.executeQuery("select * from cargo_3 LIMIT 10");
            while (rs.next()) {
                model3.addRow(new Object[] { 
                    rs.getString("user_name"), 
                    rs.getString("phone_number"),
                    rs.getString("vehicle_type")
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_formComponentShown

    private void btnCargoDel1ActionPerformed(java.awt.event.ActionEvent evt) {
        // Get the selected row index in the JTable
        DefaultTableModel model = (DefaultTableModel) tblCargo1.getModel();
        int selectedRow = tblCargo1.getSelectedRow();

        // If no row is selected, show a message and return
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a row to delete.", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Get the values from the selected row
        String userName = model.getValueAt(selectedRow, 0).toString();
        String phoneNumber = model.getValueAt(selectedRow, 1).toString();

        // SQL queries for deletion
        String deleteFromCargo = "DELETE FROM cargo_1 WHERE user_name = ? AND phone_number = ?";
        String updateShipment = "UPDATE shipmentsubmission SET cargo = NULL WHERE user_name = ? AND phone_number = ?";

        try (Connection con = MyConnection.getConnection()) {
            // First delete from cargo_1
            try (PreparedStatement stmt = con.prepareStatement(deleteFromCargo)) {
                stmt.setString(1, userName);
                stmt.setString(2, phoneNumber);
                int rowsAffected = stmt.executeUpdate();

                if (rowsAffected > 0) {
                    // Then update shipmentsubmission to remove cargo assignment
                    try (PreparedStatement updateStmt = con.prepareStatement(updateShipment)) {
                        updateStmt.setString(1, userName);
                        updateStmt.setString(2, phoneNumber);
                        updateStmt.executeUpdate();
                    }

                    // Remove the row from the table
                    model.removeRow(selectedRow);
                    JOptionPane.showMessageDialog(null, "Cargo deleted successfully!", "Success",
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Error deleting the cargo.", "Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage(), "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
        setVisible(false);
        new ViewCargo().setVisible(true);
    }

    private void btnCargoDel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargoDel2ActionPerformed
        // TODO add your handling code here:
        try (Connection con = MyConnection.getConnection()) {

            // Get the selected row index in the JTable
            DefaultTableModel model = (DefaultTableModel) tblCargo2.getModel();
            int selectedRow = tblCargo2.getSelectedRow();

            // If no row is selected, show a message and return
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(null, "Please select a row to delete.", "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Get the values from the selected row (assuming the client_name and file_link
            // are in columns 0 and 1)
            String userName = model.getValueAt(selectedRow, 0).toString();
            String phoneNumber = model.getValueAt(selectedRow, 1).toString();

            // Check route availability before deletion
            if (!isRouteAvailable(userName, phoneNumber, "cargo_2")) {
                JOptionPane.showMessageDialog(null, "This cargo has reached the maximum limit of 10 shipments!", 
                        "Limit Reached", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // SQL query to delete the row from the database based on client_name and
            // file_link
            String sql = "DELETE FROM cargo_2 WHERE user_name = ? AND phone_number = ?";

            // Prepare the SQL statement
            try (PreparedStatement stmt = con.prepareStatement(sql)) {
                stmt.setString(1, userName); // Set client_name value
                stmt.setString(2, phoneNumber); // Set file_link value

                // Execute the update (deletion)
                int rowsAffected = stmt.executeUpdate();

                // If rows are affected, proceed to remove the row from the table
                if (rowsAffected > 0) {
                    // Remove the selected row from the table model
                    model.removeRow(selectedRow);

                    // Show success message
                    JOptionPane.showMessageDialog(null, "Row deleted successfully!", "Success",
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
                    // If no rows were deleted from the database
                    JOptionPane.showMessageDialog(null, "Error deleting the row from the database.", "Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Database connection error: " + e.getMessage(), "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
        setVisible(false);
        new ViewCargo().setVisible(true);
    }//GEN-LAST:event_btnCargoDel2ActionPerformed

    private void btnCargoDel3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargoDel3ActionPerformed
        // TODO add your handling code here:
        try (Connection con = MyConnection.getConnection()) {

            // Get the selected row index in the JTable
            DefaultTableModel model = (DefaultTableModel) tblCargo3.getModel();
            int selectedRow = tblCargo3.getSelectedRow();

            // If no row is selected, show a message and return
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(null, "Please select a row to delete.", "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Get the values from the selected row (assuming the client_name and file_link
            // are in columns 0 and 1)
            String userName = model.getValueAt(selectedRow, 0).toString();
            String phoneNumber = model.getValueAt(selectedRow, 1).toString();

            // Check route availability before deletion
            if (!isRouteAvailable(userName, phoneNumber, "cargo_3")) {
                JOptionPane.showMessageDialog(null, "This cargo has reached the maximum limit of 10 shipments!", 
                        "Limit Reached", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // SQL query to delete the row from the database based on client_name and
            // file_link
            String sql = "DELETE FROM cargo_3 WHERE user_name = ? AND phone_number = ?";

            // Prepare the SQL statement
            try (PreparedStatement stmt = con.prepareStatement(sql)) {
                stmt.setString(1, userName); // Set client_name value
                stmt.setString(2, phoneNumber); // Set file_link value

                // Execute the update (deletion)
                int rowsAffected = stmt.executeUpdate();

                // If rows are affected, proceed to remove the row from the table
                if (rowsAffected > 0) {
                    // Remove the selected row from the table model
                    model.removeRow(selectedRow);

                    // Show success message
                    JOptionPane.showMessageDialog(null, "Row deleted successfully!", "Success",
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
                    // If no rows were deleted from the database
                    JOptionPane.showMessageDialog(null, "Error deleting the row from the database.", "Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Database connection error: " + e.getMessage(), "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
        setVisible(false);
        new ViewCargo().setVisible(true);
    }//GEN-LAST:event_btnCargoDel3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new AdminDashboard().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        new AdminDashboard().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
         new AdminDashboard().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewCargo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewCargo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewCargo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewCargo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewCargo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnCargoDel1;
    private javax.swing.JButton btnCargoDel2;
    private javax.swing.JButton btnCargoDel3;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private raven.tabbed.TabbedPaneCustom tabbedPaneCustom1;
    private javax.swing.JTable tblCargo1;
    private javax.swing.JTable tblCargo2;
    private javax.swing.JTable tblCargo3;
    // End of variables declaration//GEN-END:variables

    private boolean isRouteAvailable(String userName, String phoneNumber, String cargoType) {
        // Example logic to check if a route is available
        // This could be a database query or some other logic
        String sql = "SELECT COUNT(*) AS shipment_count FROM " + cargoType + 
                     " WHERE user_name = ? AND phone_number = ?";
        
        try (Connection con = MyConnection.getConnection();
             PreparedStatement stmt = con.prepareStatement(sql)) {
            
            stmt.setString(1, userName);
            stmt.setString(2, phoneNumber);
            
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                int count = rs.getInt("shipment_count");
                // Assuming a route is available if there are less than 10 shipments
                return count < 10;
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error checking route availability: " + e.getMessage(), 
                                          "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        return false; // Default to false if there's an error
    }

    // Add this new method to check for duplicates
    private boolean isDuplicateEntry(String userName, String phoneNumber, String cargoTable) {
        String sql = "SELECT COUNT(*) AS entry_count FROM " + cargoTable + 
                    " WHERE user_name = ? AND phone_number = ?";
        
        try (Connection con = MyConnection.getConnection();
             PreparedStatement stmt = con.prepareStatement(sql)) {
            
            stmt.setString(1, userName);
            stmt.setString(2, phoneNumber);
            
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                int count = rs.getInt("entry_count");
                return count > 0;
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error checking for duplicates: " + e.getMessage(), 
                                        "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        return false;
    }
}
